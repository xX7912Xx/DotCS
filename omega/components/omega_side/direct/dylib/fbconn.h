/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "main.go"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern void FreeMem(void* address);

/* Return type for ConnectFB */
struct ConnectFB_return {
	GoInt r0; /* connID */
	char* r1; /* err */
};
extern struct ConnectFB_return ConnectFB(char* address);
extern char* ReleaseConnByID(GoInt id);

/* Return type for RecvGamePacket */
struct RecvGamePacket_return {
	char* r0; /* pktBytes */
	GoInt r1; /* l */
	char* r2; /* err */
};
extern struct RecvGamePacket_return RecvGamePacket(GoInt connID);
extern char* SendGamePacketBytes(GoInt connID, GoSlice content);
extern char* SendFBCommand(GoInt connID, char* cmd);

/* Return type for SendWSCommand */
struct SendWSCommand_return {
	char* r0; /* uuid */
	char* r1; /* err */
};
extern struct SendWSCommand_return SendWSCommand(GoInt connID, char* cmd);

/* Return type for SendMCCommand */
struct SendMCCommand_return {
	char* r0; /* uuid */
	char* r1; /* err */
};
extern struct SendMCCommand_return SendMCCommand(GoInt connID, char* cmd);
extern char* SendNoResponseCommand(GoInt connID, char* cmd);
extern char* ReducePacket(GoInt connID, GoUint8 pktID, GoUint8 rate);

/* Return type for GamePacketBytesAsIsJsonStr */
struct GamePacketBytesAsIsJsonStr_return {
	char* r0; /* jsonStr */
	char* r1; /* err */
};
extern struct GamePacketBytesAsIsJsonStr_return GamePacketBytesAsIsJsonStr(GoSlice pktBytes);

/* Return type for JsonStrAsIsGamePacketBytes */
struct JsonStrAsIsGamePacketBytes_return {
	char* r0; /* pktBytes */
	GoInt r1; /* l */
	char* r2; /* err */
};
extern struct JsonStrAsIsGamePacketBytes_return JsonStrAsIsGamePacketBytes(GoInt packetID, char* jsonStr);

#ifdef __cplusplus
}
#endif
