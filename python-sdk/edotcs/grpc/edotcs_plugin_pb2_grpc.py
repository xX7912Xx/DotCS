# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from edotcs.grpc import edotcs_plugin_pb2 as edotcs_dot_grpc_dot_edotcs__plugin__pb2


class InitializeStub(object):
    """在EDotCS 连接完成插件后,就会对插件进行初始化
    这里的事件比较特殊,在返回后另执行一条命令来告知是否执行成功,通常通知类消息命名以 _Return 结尾
    Listen 系列接口: 是由 EDotCS 客户端向 插件发送的内容
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EDotCS_Client_New = channel.unary_unary(
                '/edotcs.Initialize/EDotCS_Client_New',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.EDotCS_Client_New_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.EDotCS_Client_New_Reply.FromString,
                )
        self.Menu_Set = channel.unary_unary(
                '/edotcs.Initialize/Menu_Set',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Reply.FromString,
                )
        self.Menu_Set_Return = channel.unary_unary(
                '/edotcs.Initialize/Menu_Set_Return',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Return_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Return_Reply.FromString,
                )
        self.License = channel.unary_unary(
                '/edotcs.Initialize/License',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.License_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.License_Reply.FromString,
                )
        self.Plugin_Name = channel.unary_unary(
                '/edotcs.Initialize/Plugin_Name',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plugin_Name_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plugin_Name_Reply.FromString,
                )


class InitializeServicer(object):
    """在EDotCS 连接完成插件后,就会对插件进行初始化
    这里的事件比较特殊,在返回后另执行一条命令来告知是否执行成功,通常通知类消息命名以 _Return 结尾
    Listen 系列接口: 是由 EDotCS 客户端向 插件发送的内容
    """

    def EDotCS_Client_New(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Menu_Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Menu_Set_Return(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def License(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Plugin_Name(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InitializeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EDotCS_Client_New': grpc.unary_unary_rpc_method_handler(
                    servicer.EDotCS_Client_New,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.EDotCS_Client_New_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.EDotCS_Client_New_Reply.SerializeToString,
            ),
            'Menu_Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Menu_Set,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Reply.SerializeToString,
            ),
            'Menu_Set_Return': grpc.unary_unary_rpc_method_handler(
                    servicer.Menu_Set_Return,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Return_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Return_Reply.SerializeToString,
            ),
            'License': grpc.unary_unary_rpc_method_handler(
                    servicer.License,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.License_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.License_Reply.SerializeToString,
            ),
            'Plugin_Name': grpc.unary_unary_rpc_method_handler(
                    servicer.Plugin_Name,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plugin_Name_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plugin_Name_Reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'edotcs.Initialize', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Initialize(object):
    """在EDotCS 连接完成插件后,就会对插件进行初始化
    这里的事件比较特殊,在返回后另执行一条命令来告知是否执行成功,通常通知类消息命名以 _Return 结尾
    Listen 系列接口: 是由 EDotCS 客户端向 插件发送的内容
    """

    @staticmethod
    def EDotCS_Client_New(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/edotcs.Initialize/EDotCS_Client_New',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.EDotCS_Client_New_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.EDotCS_Client_New_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Menu_Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/edotcs.Initialize/Menu_Set',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Menu_Set_Return(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/edotcs.Initialize/Menu_Set_Return',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Return_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Menu_Set_Return_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def License(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/edotcs.Initialize/License',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.License_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.License_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Plugin_Name(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/edotcs.Initialize/Plugin_Name',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plugin_Name_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plugin_Name_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class listenStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Player_Message = channel.stream_unary(
                '/edotcs.listen/Player_Message',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Message_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Message_Reply.FromString,
                )
        self.Player_Join = channel.stream_unary(
                '/edotcs.listen/Player_Join',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plyaer_Join_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plyaer_Join_Reply.FromString,
                )
        self.Player_Left = channel.stream_unary(
                '/edotcs.listen/Player_Left',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Left_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Left_Reply.FromString,
                )
        self.User_Command = channel.stream_unary(
                '/edotcs.listen/User_Command',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.User_Command_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.User_Command_Reply.FromString,
                )
        self.Robot_Exit_Server = channel.unary_unary(
                '/edotcs.listen/Robot_Exit_Server',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Robot_Exit_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Robot_Exit_Reply.FromString,
                )
        self.heartbeat = channel.unary_unary(
                '/edotcs.listen/heartbeat',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.heartbeat_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.heartbeat_Reply.FromString,
                )


class listenServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Player_Message(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Player_Join(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Player_Left(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def User_Command(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Robot_Exit_Server(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_listenServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Player_Message': grpc.stream_unary_rpc_method_handler(
                    servicer.Player_Message,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Message_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Message_Reply.SerializeToString,
            ),
            'Player_Join': grpc.stream_unary_rpc_method_handler(
                    servicer.Player_Join,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plyaer_Join_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plyaer_Join_Reply.SerializeToString,
            ),
            'Player_Left': grpc.stream_unary_rpc_method_handler(
                    servicer.Player_Left,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Left_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Left_Reply.SerializeToString,
            ),
            'User_Command': grpc.stream_unary_rpc_method_handler(
                    servicer.User_Command,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.User_Command_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.User_Command_Reply.SerializeToString,
            ),
            'Robot_Exit_Server': grpc.unary_unary_rpc_method_handler(
                    servicer.Robot_Exit_Server,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Robot_Exit_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Robot_Exit_Reply.SerializeToString,
            ),
            'heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.heartbeat,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.heartbeat_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.heartbeat_Reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'edotcs.listen', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class listen(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Player_Message(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/edotcs.listen/Player_Message',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Message_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Message_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Player_Join(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/edotcs.listen/Player_Join',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plyaer_Join_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Plyaer_Join_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Player_Left(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/edotcs.listen/Player_Left',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Left_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Player_Left_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def User_Command(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/edotcs.listen/User_Command',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.User_Command_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.User_Command_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Robot_Exit_Server(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/edotcs.listen/Robot_Exit_Server',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Robot_Exit_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Robot_Exit_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/edotcs.listen/heartbeat',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.heartbeat_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.heartbeat_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ApiStub(object):
    """API 系列接口: 是由插件主动向EDotCS 客户端执行命令的接口
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Say_To = channel.unary_stream(
                '/edotcs.Api/Say_To',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Say_To_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Say_To_Reply.FromString,
                )
        self.SendCmd = channel.unary_stream(
                '/edotcs.Api/SendCmd',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendCmd_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendCmd_Reply.FromString,
                )
        self.SendWSCmd = channel.unary_stream(
                '/edotcs.Api/SendWSCmd',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendWSCmd_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendWSCmd_Reply.FromString,
                )
        self.Log = channel.unary_stream(
                '/edotcs.Api/Log',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Log_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Log_Reply.FromString,
                )
        self.Ban = channel.unary_stream(
                '/edotcs.Api/Ban',
                request_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Ban_Request.SerializeToString,
                response_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Ban_Reply.FromString,
                )


class ApiServicer(object):
    """API 系列接口: 是由插件主动向EDotCS 客户端执行命令的接口
    """

    def Say_To(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendCmd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendWSCmd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Log(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ban(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Say_To': grpc.unary_stream_rpc_method_handler(
                    servicer.Say_To,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Say_To_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Say_To_Reply.SerializeToString,
            ),
            'SendCmd': grpc.unary_stream_rpc_method_handler(
                    servicer.SendCmd,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendCmd_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendCmd_Reply.SerializeToString,
            ),
            'SendWSCmd': grpc.unary_stream_rpc_method_handler(
                    servicer.SendWSCmd,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendWSCmd_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendWSCmd_Reply.SerializeToString,
            ),
            'Log': grpc.unary_stream_rpc_method_handler(
                    servicer.Log,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Log_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Log_Reply.SerializeToString,
            ),
            'Ban': grpc.unary_stream_rpc_method_handler(
                    servicer.Ban,
                    request_deserializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Ban_Request.FromString,
                    response_serializer=edotcs_dot_grpc_dot_edotcs__plugin__pb2.Ban_Reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'edotcs.Api', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Api(object):
    """API 系列接口: 是由插件主动向EDotCS 客户端执行命令的接口
    """

    @staticmethod
    def Say_To(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/edotcs.Api/Say_To',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Say_To_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Say_To_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendCmd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/edotcs.Api/SendCmd',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendCmd_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendCmd_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendWSCmd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/edotcs.Api/SendWSCmd',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendWSCmd_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.SendWSCmd_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Log(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/edotcs.Api/Log',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Log_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Log_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ban(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/edotcs.Api/Ban',
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Ban_Request.SerializeToString,
            edotcs_dot_grpc_dot_edotcs__plugin__pb2.Ban_Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
